--
-- PostgreSQL database dump
--

-- Dumped from database version 10.2
-- Dumped by pg_dump version 10.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: data_type; Type: TYPE; Schema: public; Owner: ground
--

CREATE TYPE data_type AS ENUM (
    'integer',
    'string',
    'boolean'
);


ALTER TYPE data_type OWNER TO ground;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: edge; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE edge (
    item_id bigint NOT NULL,
    source_key character varying,
    from_node_id bigint NOT NULL,
    to_node_id bigint NOT NULL,
    name character varying
);


ALTER TABLE edge OWNER TO ground;

--
-- Name: edge_version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE edge_version (
    id bigint NOT NULL,
    edge_id bigint NOT NULL,
    from_node_version_start_id bigint NOT NULL,
    from_node_version_end_id bigint,
    to_node_version_start_id bigint NOT NULL,
    to_node_version_end_id bigint
);


ALTER TABLE edge_version OWNER TO ground;

--
-- Name: graph; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE graph (
    item_id bigint NOT NULL,
    source_key character varying,
    name character varying
);


ALTER TABLE graph OWNER TO ground;

--
-- Name: graph_version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE graph_version (
    id bigint NOT NULL,
    graph_id bigint NOT NULL
);


ALTER TABLE graph_version OWNER TO ground;

--
-- Name: graph_version_edge; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE graph_version_edge (
    graph_version_id bigint NOT NULL,
    edge_version_id bigint NOT NULL
);


ALTER TABLE graph_version_edge OWNER TO ground;

--
-- Name: item; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE item (
    id bigint NOT NULL
);


ALTER TABLE item OWNER TO ground;

--
-- Name: item_tag; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE item_tag (
    item_id bigint NOT NULL,
    key character varying NOT NULL,
    value character varying,
    type data_type
);


ALTER TABLE item_tag OWNER TO ground;

--
-- Name: lineage_edge; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE lineage_edge (
    item_id bigint NOT NULL,
    source_key character varying,
    name character varying
);


ALTER TABLE lineage_edge OWNER TO ground;

--
-- Name: lineage_edge_version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE lineage_edge_version (
    id bigint NOT NULL,
    lineage_edge_id bigint NOT NULL,
    from_rich_version_id bigint NOT NULL,
    to_rich_version_id bigint NOT NULL,
    principal_id bigint
);


ALTER TABLE lineage_edge_version OWNER TO ground;

--
-- Name: lineage_graph; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE lineage_graph (
    item_id bigint NOT NULL,
    source_key character varying,
    name character varying
);


ALTER TABLE lineage_graph OWNER TO ground;

--
-- Name: lineage_graph_version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE lineage_graph_version (
    id bigint NOT NULL,
    lineage_graph_id bigint NOT NULL
);


ALTER TABLE lineage_graph_version OWNER TO ground;

--
-- Name: lineage_graph_version_edge; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE lineage_graph_version_edge (
    lineage_graph_version_id bigint NOT NULL,
    lineage_edge_version_id bigint NOT NULL
);


ALTER TABLE lineage_graph_version_edge OWNER TO ground;

--
-- Name: node; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE node (
    item_id bigint NOT NULL,
    source_key character varying,
    name character varying
);


ALTER TABLE node OWNER TO ground;

--
-- Name: node_version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE node_version (
    id bigint NOT NULL,
    node_id bigint NOT NULL
);


ALTER TABLE node_version OWNER TO ground;

--
-- Name: principal; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE principal (
    node_id bigint NOT NULL,
    source_key character varying,
    name character varying
);


ALTER TABLE principal OWNER TO ground;

--
-- Name: rich_version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE rich_version (
    id bigint NOT NULL,
    structure_version_id bigint,
    reference character varying
);


ALTER TABLE rich_version OWNER TO ground;

--
-- Name: rich_version_external_parameter; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE rich_version_external_parameter (
    rich_version_id bigint NOT NULL,
    key character varying NOT NULL,
    value character varying NOT NULL
);


ALTER TABLE rich_version_external_parameter OWNER TO ground;

--
-- Name: rich_version_tag; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE rich_version_tag (
    rich_version_id bigint NOT NULL,
    key character varying NOT NULL,
    value character varying,
    type data_type
);


ALTER TABLE rich_version_tag OWNER TO ground;

--
-- Name: structure; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE structure (
    item_id bigint NOT NULL,
    source_key character varying,
    name character varying
);


ALTER TABLE structure OWNER TO ground;

--
-- Name: structure_version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE structure_version (
    id bigint NOT NULL,
    structure_id bigint NOT NULL
);


ALTER TABLE structure_version OWNER TO ground;

--
-- Name: structure_version_attribute; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE structure_version_attribute (
    structure_version_id bigint NOT NULL,
    key character varying NOT NULL,
    type character varying NOT NULL
);


ALTER TABLE structure_version_attribute OWNER TO ground;

--
-- Name: version; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE version (
    id bigint NOT NULL
);


ALTER TABLE version OWNER TO ground;

--
-- Name: version_history_dag; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE version_history_dag (
    item_id bigint NOT NULL,
    version_successor_id bigint NOT NULL
);


ALTER TABLE version_history_dag OWNER TO ground;

--
-- Name: version_successor; Type: TABLE; Schema: public; Owner: ground
--

CREATE TABLE version_successor (
    id bigint NOT NULL,
    from_version_id bigint NOT NULL,
    to_version_id bigint NOT NULL
);


ALTER TABLE version_successor OWNER TO ground;

--
-- Data for Name: edge; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY edge (item_id, source_key, from_node_id, to_node_id, name) FROM stdin;
6	jarvisExperimentjarvisTrial	1	2	jarvisExperimentjarvisTrial
7	jarvisTrialjarvisLiteral	2	3	jarvisTrialjarvisLiteral
8	jarvisTrialjarvisArtifact	2	4	jarvisTrialjarvisArtifact
9	jarvisLiteraljarvisAction	3	5	jarvisLiteraljarvisAction
10	jarvisArtifactjarvisAction	4	5	jarvisArtifactjarvisAction
11	jarvisActionjarvisArtifact	5	4	jarvisActionjarvisArtifact
\.


--
-- Data for Name: edge_version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY edge_version (id, edge_id, from_node_version_start_id, from_node_version_end_id, to_node_version_start_id, to_node_version_end_id) FROM stdin;
16	6	12	\N	14	\N
20	6	12	\N	18	\N
24	6	12	\N	22	\N
28	6	12	\N	26	\N
32	6	12	\N	30	\N
36	6	12	\N	34	\N
40	8	14	\N	38	\N
42	8	18	\N	38	\N
44	8	22	\N	38	\N
46	8	26	\N	38	\N
48	8	30	\N	38	\N
50	8	34	\N	38	\N
56	7	14	\N	54	\N
58	7	18	\N	54	\N
60	7	22	\N	54	\N
62	7	26	\N	54	\N
64	7	30	\N	54	\N
66	7	34	\N	54	\N
70	7	14	\N	68	\N
72	7	18	\N	68	\N
74	7	22	\N	68	\N
76	7	26	\N	68	\N
78	7	30	\N	68	\N
80	7	34	\N	68	\N
82	9	54	\N	52	\N
84	9	68	\N	52	\N
86	11	52	\N	38	\N
\.


--
-- Data for Name: graph; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY graph (item_id, source_key, name) FROM stdin;
\.


--
-- Data for Name: graph_version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY graph_version (id, graph_id) FROM stdin;
\.


--
-- Data for Name: graph_version_edge; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY graph_version_edge (graph_version_id, edge_version_id) FROM stdin;
\.


--
-- Data for Name: item; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY item (id) FROM stdin;
1
2
3
4
5
6
7
8
9
10
11
\.


--
-- Data for Name: item_tag; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY item_tag (item_id, key, value, type) FROM stdin;
\.


--
-- Data for Name: lineage_edge; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY lineage_edge (item_id, source_key, name) FROM stdin;
\.


--
-- Data for Name: lineage_edge_version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY lineage_edge_version (id, lineage_edge_id, from_rich_version_id, to_rich_version_id, principal_id) FROM stdin;
\.


--
-- Data for Name: lineage_graph; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY lineage_graph (item_id, source_key, name) FROM stdin;
\.


--
-- Data for Name: lineage_graph_version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY lineage_graph_version (id, lineage_graph_id) FROM stdin;
\.


--
-- Data for Name: lineage_graph_version_edge; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY lineage_graph_version_edge (lineage_graph_version_id, lineage_edge_version_id) FROM stdin;
\.


--
-- Data for Name: node; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY node (item_id, source_key, name) FROM stdin;
1	jarvisExperiment	jarvisExperiment
2	jarvisTrial	jarvisTrial
3	jarvisLiteral	jarvisLiteral
4	jarvisArtifact	jarvisArtifact
5	jarvisAction	jarvisAction
\.


--
-- Data for Name: node_version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY node_version (id, node_id) FROM stdin;
12	1
14	2
18	2
22	2
26	2
30	2
34	2
38	4
52	5
54	3
68	3
\.


--
-- Data for Name: principal; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY principal (node_id, source_key, name) FROM stdin;
\.


--
-- Data for Name: rich_version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY rich_version (id, structure_version_id, reference) FROM stdin;
12	\N	\N
14	\N	\N
16	\N	\N
18	\N	\N
20	\N	\N
22	\N	\N
24	\N	\N
26	\N	\N
28	\N	\N
30	\N	\N
32	\N	\N
34	\N	\N
36	\N	\N
38	\N	\N
40	\N	\N
42	\N	\N
44	\N	\N
46	\N	\N
48	\N	\N
50	\N	\N
52	\N	\N
54	\N	\N
56	\N	\N
58	\N	\N
60	\N	\N
62	\N	\N
64	\N	\N
66	\N	\N
68	\N	\N
70	\N	\N
72	\N	\N
74	\N	\N
76	\N	\N
78	\N	\N
80	\N	\N
82	\N	\N
84	\N	\N
86	\N	\N
\.


--
-- Data for Name: rich_version_external_parameter; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY rich_version_external_parameter (rich_version_id, key, value) FROM stdin;
\.


--
-- Data for Name: rich_version_tag; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY rich_version_tag (rich_version_id, key, value, type) FROM stdin;
12	experimentName	plate_demo	string
14	literalName0	ones	string
14	literalValue0	1	string
14	literalName1	tens	string
14	literalValue1	10	string
14	artifactName0	product.txt	string
14	artifactMD5_0	31d30eea8d0968d6458e0ad0027c9f80	string
14	artifactName1	plate.py	string
14	artifactMD5_1	a7b30359984976a3efa5bf343296c9e9	string
18	literalName0	ones	string
18	literalValue0	1	string
18	literalName1	tens	string
18	literalValue1	100	string
18	artifactName0	product.txt	string
18	artifactMD5_0	919d117956d3135c4c683ff021352f5c	string
18	artifactName1	plate.py	string
18	artifactMD5_1	a7b30359984976a3efa5bf343296c9e9	string
22	literalName0	ones	string
22	literalValue0	3	string
22	literalName1	tens	string
22	literalValue1	10	string
22	artifactName0	product.txt	string
22	artifactMD5_0	d5b4c7d9b06b60a7846c4529834c9812	string
22	artifactName1	plate.py	string
22	artifactMD5_1	a7b30359984976a3efa5bf343296c9e9	string
26	literalName0	ones	string
26	literalValue0	2	string
26	literalName1	tens	string
26	literalValue1	100	string
26	artifactName0	product.txt	string
26	artifactMD5_0	c1ba58b05f6245f221ad65391fa6690b	string
26	artifactName1	plate.py	string
26	artifactMD5_1	a7b30359984976a3efa5bf343296c9e9	string
30	literalName0	ones	string
30	literalValue0	2	string
30	literalName1	tens	string
30	literalValue1	10	string
30	artifactName0	product.txt	string
30	artifactMD5_0	dbbf8220893d497d403bb9cdf49db7a4	string
30	artifactName1	plate.py	string
30	artifactMD5_1	a7b30359984976a3efa5bf343296c9e9	string
34	literalName0	ones	string
34	literalValue0	3	string
34	literalName1	tens	string
34	literalValue1	100	string
34	artifactName0	product.txt	string
34	artifactMD5_0	62b5942b6aabb2aa53df28074c1b834f	string
34	artifactName1	plate.py	string
34	artifactMD5_1	a7b30359984976a3efa5bf343296c9e9	string
38	artifactName	product.txt	string
52	actionName	multiply	string
54	literalName	ones	string
54	literalValue	[1, 2, 3]	string
68	literalName	tens	string
68	literalValue	[10, 100]	string
\.


--
-- Data for Name: structure; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY structure (item_id, source_key, name) FROM stdin;
\.


--
-- Data for Name: structure_version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY structure_version (id, structure_id) FROM stdin;
\.


--
-- Data for Name: structure_version_attribute; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY structure_version_attribute (structure_version_id, key, type) FROM stdin;
\.


--
-- Data for Name: version; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY version (id) FROM stdin;
0
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
\.


--
-- Data for Name: version_history_dag; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY version_history_dag (item_id, version_successor_id) FROM stdin;
1	13
2	15
6	17
2	19
6	21
2	23
6	25
2	27
6	29
2	31
6	33
2	35
6	37
4	39
8	41
8	43
8	45
8	47
8	49
8	51
5	53
3	55
7	57
7	59
7	61
7	63
7	65
7	67
3	69
7	71
7	73
7	75
7	77
7	79
7	81
9	83
9	85
11	87
\.


--
-- Data for Name: version_successor; Type: TABLE DATA; Schema: public; Owner: ground
--

COPY version_successor (id, from_version_id, to_version_id) FROM stdin;
13	0	12
15	0	14
17	0	16
19	0	18
21	0	20
23	0	22
25	0	24
27	0	26
29	0	28
31	0	30
33	0	32
35	0	34
37	0	36
39	0	38
41	0	40
43	0	42
45	0	44
47	0	46
49	0	48
51	0	50
53	0	52
55	0	54
57	0	56
59	0	58
61	0	60
63	0	62
65	0	64
67	0	66
69	0	68
71	0	70
73	0	72
75	0	74
77	0	76
79	0	78
81	0	80
83	0	82
85	0	84
87	0	86
\.


--
-- Name: edge edge_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge
    ADD CONSTRAINT edge_pkey PRIMARY KEY (item_id);


--
-- Name: edge edge_source_key_key; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge
    ADD CONSTRAINT edge_source_key_key UNIQUE (source_key);


--
-- Name: edge_version edge_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge_version
    ADD CONSTRAINT edge_version_pkey PRIMARY KEY (id);


--
-- Name: graph graph_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph
    ADD CONSTRAINT graph_pkey PRIMARY KEY (item_id);


--
-- Name: graph graph_source_key_key; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph
    ADD CONSTRAINT graph_source_key_key UNIQUE (source_key);


--
-- Name: graph_version_edge graph_version_edge_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph_version_edge
    ADD CONSTRAINT graph_version_edge_pkey PRIMARY KEY (graph_version_id, edge_version_id);


--
-- Name: graph_version graph_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph_version
    ADD CONSTRAINT graph_version_pkey PRIMARY KEY (id);


--
-- Name: item item_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY item
    ADD CONSTRAINT item_pkey PRIMARY KEY (id);


--
-- Name: item_tag item_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY item_tag
    ADD CONSTRAINT item_tag_pkey PRIMARY KEY (item_id, key);


--
-- Name: lineage_edge lineage_edge_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge
    ADD CONSTRAINT lineage_edge_pkey PRIMARY KEY (item_id);


--
-- Name: lineage_edge lineage_edge_source_key_key; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge
    ADD CONSTRAINT lineage_edge_source_key_key UNIQUE (source_key);


--
-- Name: lineage_edge_version lineage_edge_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge_version
    ADD CONSTRAINT lineage_edge_version_pkey PRIMARY KEY (id);


--
-- Name: lineage_graph lineage_graph_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph
    ADD CONSTRAINT lineage_graph_pkey PRIMARY KEY (item_id);


--
-- Name: lineage_graph lineage_graph_source_key_key; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph
    ADD CONSTRAINT lineage_graph_source_key_key UNIQUE (source_key);


--
-- Name: lineage_graph_version_edge lineage_graph_version_edge_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph_version_edge
    ADD CONSTRAINT lineage_graph_version_edge_pkey PRIMARY KEY (lineage_graph_version_id, lineage_edge_version_id);


--
-- Name: lineage_graph_version lineage_graph_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph_version
    ADD CONSTRAINT lineage_graph_version_pkey PRIMARY KEY (id);


--
-- Name: node node_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY node
    ADD CONSTRAINT node_pkey PRIMARY KEY (item_id);


--
-- Name: node node_source_key_key; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY node
    ADD CONSTRAINT node_source_key_key UNIQUE (source_key);


--
-- Name: node_version node_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY node_version
    ADD CONSTRAINT node_version_pkey PRIMARY KEY (id);


--
-- Name: principal principal_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY principal
    ADD CONSTRAINT principal_pkey PRIMARY KEY (node_id);


--
-- Name: principal principal_source_key_key; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY principal
    ADD CONSTRAINT principal_source_key_key UNIQUE (source_key);


--
-- Name: rich_version_external_parameter rich_version_external_parameter_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY rich_version_external_parameter
    ADD CONSTRAINT rich_version_external_parameter_pkey PRIMARY KEY (rich_version_id, key);


--
-- Name: rich_version rich_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY rich_version
    ADD CONSTRAINT rich_version_pkey PRIMARY KEY (id);


--
-- Name: rich_version_tag rich_version_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY rich_version_tag
    ADD CONSTRAINT rich_version_tag_pkey PRIMARY KEY (rich_version_id, key);


--
-- Name: structure structure_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure
    ADD CONSTRAINT structure_pkey PRIMARY KEY (item_id);


--
-- Name: structure structure_source_key_key; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure
    ADD CONSTRAINT structure_source_key_key UNIQUE (source_key);


--
-- Name: structure_version_attribute structure_version_attribute_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure_version_attribute
    ADD CONSTRAINT structure_version_attribute_pkey PRIMARY KEY (structure_version_id, key);


--
-- Name: structure_version structure_version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure_version
    ADD CONSTRAINT structure_version_pkey PRIMARY KEY (id);


--
-- Name: version_history_dag version_history_dag_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version_history_dag
    ADD CONSTRAINT version_history_dag_pkey PRIMARY KEY (item_id, version_successor_id);


--
-- Name: version version_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version
    ADD CONSTRAINT version_pkey PRIMARY KEY (id);


--
-- Name: version_successor version_successor_pkey; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version_successor
    ADD CONSTRAINT version_successor_pkey PRIMARY KEY (id);


--
-- Name: version_successor version_successor_unique_endpoints; Type: CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version_successor
    ADD CONSTRAINT version_successor_unique_endpoints UNIQUE (from_version_id, to_version_id);


--
-- Name: edge edge_from_node_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge
    ADD CONSTRAINT edge_from_node_id_fkey FOREIGN KEY (from_node_id) REFERENCES node(item_id);


--
-- Name: edge edge_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge
    ADD CONSTRAINT edge_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: edge edge_to_node_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge
    ADD CONSTRAINT edge_to_node_id_fkey FOREIGN KEY (to_node_id) REFERENCES node(item_id);


--
-- Name: edge_version edge_version_edge_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge_version
    ADD CONSTRAINT edge_version_edge_id_fkey FOREIGN KEY (edge_id) REFERENCES edge(item_id);


--
-- Name: edge_version edge_version_from_node_version_end_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge_version
    ADD CONSTRAINT edge_version_from_node_version_end_id_fkey FOREIGN KEY (from_node_version_end_id) REFERENCES node_version(id);


--
-- Name: edge_version edge_version_from_node_version_start_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge_version
    ADD CONSTRAINT edge_version_from_node_version_start_id_fkey FOREIGN KEY (from_node_version_start_id) REFERENCES node_version(id);


--
-- Name: edge_version edge_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge_version
    ADD CONSTRAINT edge_version_id_fkey FOREIGN KEY (id) REFERENCES rich_version(id);


--
-- Name: edge_version edge_version_to_node_version_end_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge_version
    ADD CONSTRAINT edge_version_to_node_version_end_id_fkey FOREIGN KEY (to_node_version_end_id) REFERENCES node_version(id);


--
-- Name: edge_version edge_version_to_node_version_start_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY edge_version
    ADD CONSTRAINT edge_version_to_node_version_start_id_fkey FOREIGN KEY (to_node_version_start_id) REFERENCES node_version(id);


--
-- Name: graph graph_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph
    ADD CONSTRAINT graph_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: graph_version_edge graph_version_edge_edge_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph_version_edge
    ADD CONSTRAINT graph_version_edge_edge_version_id_fkey FOREIGN KEY (edge_version_id) REFERENCES edge_version(id);


--
-- Name: graph_version_edge graph_version_edge_graph_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph_version_edge
    ADD CONSTRAINT graph_version_edge_graph_version_id_fkey FOREIGN KEY (graph_version_id) REFERENCES graph_version(id);


--
-- Name: graph_version graph_version_graph_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph_version
    ADD CONSTRAINT graph_version_graph_id_fkey FOREIGN KEY (graph_id) REFERENCES graph(item_id);


--
-- Name: graph_version graph_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY graph_version
    ADD CONSTRAINT graph_version_id_fkey FOREIGN KEY (id) REFERENCES rich_version(id);


--
-- Name: item_tag item_tag_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY item_tag
    ADD CONSTRAINT item_tag_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: lineage_edge lineage_edge_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge
    ADD CONSTRAINT lineage_edge_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: lineage_edge_version lineage_edge_version_from_rich_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge_version
    ADD CONSTRAINT lineage_edge_version_from_rich_version_id_fkey FOREIGN KEY (from_rich_version_id) REFERENCES rich_version(id);


--
-- Name: lineage_edge_version lineage_edge_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge_version
    ADD CONSTRAINT lineage_edge_version_id_fkey FOREIGN KEY (id) REFERENCES rich_version(id);


--
-- Name: lineage_edge_version lineage_edge_version_lineage_edge_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge_version
    ADD CONSTRAINT lineage_edge_version_lineage_edge_id_fkey FOREIGN KEY (lineage_edge_id) REFERENCES lineage_edge(item_id);


--
-- Name: lineage_edge_version lineage_edge_version_principal_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge_version
    ADD CONSTRAINT lineage_edge_version_principal_id_fkey FOREIGN KEY (principal_id) REFERENCES node_version(id);


--
-- Name: lineage_edge_version lineage_edge_version_to_rich_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_edge_version
    ADD CONSTRAINT lineage_edge_version_to_rich_version_id_fkey FOREIGN KEY (to_rich_version_id) REFERENCES rich_version(id);


--
-- Name: lineage_graph lineage_graph_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph
    ADD CONSTRAINT lineage_graph_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: lineage_graph_version_edge lineage_graph_version_edge_lineage_edge_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph_version_edge
    ADD CONSTRAINT lineage_graph_version_edge_lineage_edge_version_id_fkey FOREIGN KEY (lineage_edge_version_id) REFERENCES lineage_edge_version(id);


--
-- Name: lineage_graph_version_edge lineage_graph_version_edge_lineage_graph_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph_version_edge
    ADD CONSTRAINT lineage_graph_version_edge_lineage_graph_version_id_fkey FOREIGN KEY (lineage_graph_version_id) REFERENCES lineage_graph_version(id);


--
-- Name: lineage_graph_version lineage_graph_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph_version
    ADD CONSTRAINT lineage_graph_version_id_fkey FOREIGN KEY (id) REFERENCES rich_version(id);


--
-- Name: lineage_graph_version lineage_graph_version_lineage_graph_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY lineage_graph_version
    ADD CONSTRAINT lineage_graph_version_lineage_graph_id_fkey FOREIGN KEY (lineage_graph_id) REFERENCES lineage_graph(item_id);


--
-- Name: node node_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY node
    ADD CONSTRAINT node_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: node_version node_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY node_version
    ADD CONSTRAINT node_version_id_fkey FOREIGN KEY (id) REFERENCES rich_version(id);


--
-- Name: node_version node_version_node_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY node_version
    ADD CONSTRAINT node_version_node_id_fkey FOREIGN KEY (node_id) REFERENCES node(item_id);


--
-- Name: principal principal_node_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY principal
    ADD CONSTRAINT principal_node_id_fkey FOREIGN KEY (node_id) REFERENCES node(item_id);


--
-- Name: rich_version_external_parameter rich_version_external_parameter_rich_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY rich_version_external_parameter
    ADD CONSTRAINT rich_version_external_parameter_rich_version_id_fkey FOREIGN KEY (rich_version_id) REFERENCES rich_version(id);


--
-- Name: rich_version rich_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY rich_version
    ADD CONSTRAINT rich_version_id_fkey FOREIGN KEY (id) REFERENCES version(id);


--
-- Name: rich_version rich_version_structure_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY rich_version
    ADD CONSTRAINT rich_version_structure_version_id_fkey FOREIGN KEY (structure_version_id) REFERENCES structure_version(id);


--
-- Name: rich_version_tag rich_version_tag_rich_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY rich_version_tag
    ADD CONSTRAINT rich_version_tag_rich_version_id_fkey FOREIGN KEY (rich_version_id) REFERENCES rich_version(id);


--
-- Name: structure structure_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure
    ADD CONSTRAINT structure_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: structure_version_attribute structure_version_attribute_structure_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure_version_attribute
    ADD CONSTRAINT structure_version_attribute_structure_version_id_fkey FOREIGN KEY (structure_version_id) REFERENCES structure_version(id);


--
-- Name: structure_version structure_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure_version
    ADD CONSTRAINT structure_version_id_fkey FOREIGN KEY (id) REFERENCES version(id);


--
-- Name: structure_version structure_version_structure_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY structure_version
    ADD CONSTRAINT structure_version_structure_id_fkey FOREIGN KEY (structure_id) REFERENCES structure(item_id);


--
-- Name: version_history_dag version_history_dag_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version_history_dag
    ADD CONSTRAINT version_history_dag_item_id_fkey FOREIGN KEY (item_id) REFERENCES item(id);


--
-- Name: version_history_dag version_history_dag_version_successor_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version_history_dag
    ADD CONSTRAINT version_history_dag_version_successor_id_fkey FOREIGN KEY (version_successor_id) REFERENCES version_successor(id);


--
-- Name: version_successor version_successor_from_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version_successor
    ADD CONSTRAINT version_successor_from_version_id_fkey FOREIGN KEY (from_version_id) REFERENCES version(id);


--
-- Name: version_successor version_successor_to_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ground
--

ALTER TABLE ONLY version_successor
    ADD CONSTRAINT version_successor_to_version_id_fkey FOREIGN KEY (to_version_id) REFERENCES version(id);


--
-- PostgreSQL database dump complete
--

